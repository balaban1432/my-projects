AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Phonebook Application. This template creates Application Load Balancer 
  with Auto Scaling Group of Amazon Linux 2023  EC2 Instances which host Python Flask Web Application.
  EC2 instances are placed within WebServerSecurityGroup which allows http (80) connections only from ALBSecurityGroup,
  and allows tcp(3306) connections only within itself. RDS DB instance is placed within WebServerSecurityGroup 
  so that Database Server can communicate with Web Servers. Application Load Balancer is placed within ALBSecurityGroup 
  which allows http (80) and SSH (22)connections from anywhere. WebServerASG Auto Scaling Group is using the LT 
  Launch Template in order to spin up instances needed. LT Launch Template is configured to prepare Python Flask 
  environment on EC2, and to deploy Phonebook Application on Flask Server after downloading the app code 
  from Github repository.
Parameters:

  Subnets:
    Description: Choose you subnets
    Type: List<AWS::EC2::Subnet::Id>

  KeyName:
    Description: Please enter your Key pair
    Type: AWS::EC2::KeyPair::KeyName

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'

  MyVPC:
    Description: choose your vpc
    Type: AWS::EC2::VPC::Id

  MyDbname: 
    Type: AWS::SSM::Parameter::Value<String>
    Default: /clarusway/phonebook/dbname

  MyDbusername:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /clarusway/phonebook/username

Resources:

  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      DesiredCapacity: 1
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB 
      LaunchTemplate:
        LaunchTemplateId: !Ref LT 
        Version: !GetAtt LT.LatestVersionNumber 
      MaxSize: 3 
      MinSize: 1  
      TargetGroupARNs:
        - !Ref TG
      VPCZoneIdentifier: !Ref Subnets # not array

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: # Required
        - TargetGroupArn: !Ref TG
          Type: forward
      LoadBalancerArn: !Ref ALB # Required
      Port: 80 # Required
      Protocol: HTTP  # Required

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4 
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt ALBSecGrp.GroupId 
      Subnets: !Ref Subnets 
      Type: application


  LT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref LatestAmiId
        InstanceType: t2.micro
        IamInstanceProfile: 
          - !Ref MyInstanceProfile
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !GetAtt WebServerSecGrp.GroupId
        TagSpecifications: 
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub Web Server of ${AWS::StackName} Stack
        UserData:
          Fn::Base64:
            !Sub 
              - |
                #! /bin/bash -x
                dnf update -y
                dnf install python3 -y
                dnf install python-pip -y
                pip3 install Flask==2.3.3
                pip3 install Flask-MySql
                pip3 install boto3
                dnf install git -y
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                cd /home/ec2-user
                TOKEN=$(aws --region=us-east-1 ssm get-parameter --name /clarusway/phonebook/token --with-decryption --query 'Parameter.Value' --output text)
                git clone https://$TOKEN@github.com/balaban1432/phonebook-web-app.git
                python3 /home/ec2-user/phonebook-web-app/solution_with_parameter_store/phonebook-app.py
              - MyDBURI: !GetAtt MyRDS.Endpoint.Address

  TG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthyThresholdCount: 2 
      HealthCheckTimeoutSeconds: 10
      Port: 80
      Protocol: HTTP 
      TargetType: instance 
      UnhealthyThresholdCount: 3
      VpcId: !Ref MyVPC

  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: SSMInstanceProfile
      Roles:
        - !Ref MySSMRole

  MySSMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SSMRoleWithManagedPolicyotto
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - ec2.amazonaws.com
            Action: 
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess


  MyRDS:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 0
      DBInstanceClass: db.t3.micro
      DBInstanceIdentifier: phonebook-app 
      DBName: !Ref MyDbname #'{{resolve:ssm:/clarusway/phonebook/dbname:1}}'
      DBSecurityGroups: 
        - !Ref MyDBSecGrp
      Engine: mysql
      EngineVersion: 8.0.35
      MasterUserPassword: '{{resolve:ssm-secure:/clarusway/phonebook/password:1}}'
      MasterUsername: '{{resolve:ssm:/clarusway/phonebook/username:1}}' #!Ref MyDbusername
      Port: 3306
      PubliclyAccessible: true


  MyDBSecGrp:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress: # Required
        - EC2SecurityGroupId: !GetAtt WebServerSecGrp.GroupId
      GroupDescription: Db sec grp # Required
      Tags: 
        - Key: Name
          Value: osvaldo_phonebook_17_rds_secgrp
  

  WebServerSecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WEB sec group # Required
      GroupName: osvaldo-phone-book-17-WEB
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecGrp.GroupId
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC

  ALBSecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB sec group # Required
      GroupName: osvaldo-phone-book-17-ALB
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC

    
Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${ALBAddress}
      - ALBAddress: !GetAtt ALB.DNSName
    Description: Phonebook Application Load Balancer URL